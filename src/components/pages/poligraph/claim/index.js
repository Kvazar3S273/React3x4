import React, { useState } from "react";
import "../other/styles.css";
import { useSelector, useDispatch } from "react-redux";
import classNames from "classnames";

const Claim = () => {
  const [showSizes, setShowSizes] = useState(false);
  const [showFormat, setShowFormat] = useState(false);
  const [showColor, setShowColor] = useState(false);
  const [showFont, setShowFont] = useState(false);
  const [showWide, setShowWide] = useState(false);

  const handleClickSizes = (event) => {
    // üëáÔ∏è —â–æ–± –ø–æ –∫–ª—ñ–∫—É –≤—ñ–¥–∫—Ä–∏–≤–∞–ª–æ—Å—å —ñ –ø–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –∑–∞–∫—Ä–∏–≤–∞–ª–æ—Å—å
    // setShowUsers((current) => !current);
    // üëáÔ∏è —â–æ–± –ø–æ –∫–ª—ñ–∫—É —Ç—ñ–ª—å–∫–∏ –≤—ñ–¥–∫—Ä–∏–≤–∞–ª–æ—Å—å
    setShowSizes(true);
    setShowFormat(false);
    setShowColor(false);
    setShowFont(false);
    setShowWide(false);
  };
  const handleClickFormat = (event) => {
    setShowSizes(false);
    setShowFormat(true);
    setShowColor(false);
    setShowFont(false);
    setShowWide(false);
  };
  const handleClickColor = (event) => {
    setShowSizes(false);
    setShowFormat(false);
    setShowColor(true);
    setShowFont(false);
    setShowWide(false);
  };
  const handleClickFont = (event) => {
    setShowSizes(false);
    setShowFormat(false);
    setShowColor(false);
    setShowFont(true);
    setShowWide(false);
  };
  const handleClickWide = (event) => {
    setShowSizes(false);
    setShowFormat(false);
    setShowColor(false);
    setShowFont(false);
    setShowWide(true);
  };

  return (
    <>
      <div className="row">
        {/* –ë–æ—Ä–¥–æ–≤–∏–π –±–ª–æ–∫ –¥–ª—è –∫–∞—Ä—Ç–æ–∫ */}
        <div className="col px-3 mb-4" >
          <h1 className="text-center text-dark mt-4 mb-4">–í–∏–º–æ–≥–∏ –¥–æ –º–∞–∫–µ—Ç—É</h1>

          <div className="tab-claim">
            <button className={classNames("tablinks-claim", showSizes ? "active" : "")}
                        onClick={handleClickSizes}>–†–æ–∑–º—ñ—Ä–∏ –º–∞–∫–µ—Ç—É</button>
            <button className={classNames("tablinks-claim", showFormat ? "active" : "")}
                        onClick={handleClickFormat}>–§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª—ñ–≤</button>
            <button className={classNames("tablinks-claim", showColor ? "active" : "")}
                        onClick={handleClickColor}>–ö–æ–ª—ñ—Ä</button>
            <button className={classNames("tablinks-claim", showFont ? "active" : "")}
                        onClick={handleClickFont}>–®—Ä–∏—Ñ—Ç</button>
            <button className={classNames("tablinks-claim", showWide ? "active" : "")}
                        onClick={handleClickWide}>–®–∏—Ä–æ–∫–æ—Ñ–æ—Ä–º–∞—Ç–Ω–∏–π –¥—Ä—É–∫</button>
            {/* <button className="tablinks-claim" onClick={handleClickSizes}>–§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª—ñ–≤</button>
            <button className="tablinks-claim" onClick={handleClickSizes}>–ö–æ–ª—ñ—Ä</button>
            <button className="tablinks-claim" onClick={handleClickSizes}>–®—Ä–∏—Ñ—Ç</button>
            <button className="tablinks-claim" onClick={handleClickSizes}>–®–∏—Ä–æ–∫–æ—Ñ–æ—Ä–º–∞—Ç–Ω–∏–π –¥—Ä—É–∫</button> */}

            {/* <button className={classNames("tablinks", isPoligraphBuklet ? "active" : "")} 
                    onClick={handleClickBuklet}> –ë—É–∫–ª–µ—Ç–∏ </button> */}


          </div>

          <div className="tabcontent-claim mb-4 overflow-auto">
                {
                        !showSizes && !showColor && !showFont && !showFormat && !showWide &&
                        <h3>–í–∏–±–µ—Ä—ñ—Ç—å —â–æ-–Ω–µ–±—É–¥—å –∑–ª—ñ–≤–∞</h3>
                }
            {showSizes && (
              <>
                <img src="/images/services/poligraph/maket_visitka.jpg" />
                <h5>–†–æ–∑–º—ñ—Ä–∏ –º–∞–∫–µ—Ç—É</h5>
                <p>
                  –ú–∞–∫–µ—Ç –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –∑—Ä–æ–±–ª–µ–Ω–∏–π –∑ –ø—Ä–∏–ø—É—Å–∫–æ–º –ø–æ 2 –º–º –∑ –∫–æ–∂–Ω–æ–≥–æ
                  –±–æ–∫—É. –í–∞–∂–ª–∏–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è (—Ç–µ–∫—Å—Ç, –ª–æ–≥–æ—Ç–∏–ø —Ç–æ—â–æ) –ø–æ–≤–∏–Ω–Ω–∞
                  –∑–Ω–∞—Ö–æ–¥–∏—Ç–∏—Å—å –Ω–µ –±–ª–∏–∂—á–µ –Ω—ñ–∂ –∑–∞ 5 –º–º –¥–æ –∫—Ä–∞—é –º–∞–∫–µ—Ç–∞ –∑ –≤—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º
                  –ø—Ä–∏–ø—É—Å–∫—É. –í—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –Ω–∞–≤–∏–ª—ñ—Ç (—Ñ–æ—Ç–æ –∞–±–æ —Ñ–æ–Ω–æ–≤–∏–π –º–∞–ª—é–Ω–æ–∫)
                  –ø–æ–≤–∏–Ω–Ω—ñ –∑–∞–π–º–∞—Ç–∏ –≤—Å—é –ø–ª–æ—â—É –º–∞–ª—é–Ω–∫–∞. –§–∞–π–ª–∏ –Ω–µ –ø–æ–≤–∏–Ω–Ω—ñ –º—ñ—Å—Ç–∏—Ç–∏
                  –º—ñ—Ç–æ–∫ —Ä–æ–∑—Ä—ñ–∑—É, —Ö—Ä–µ—Å—Ç—ñ–≤ —Å—É–º—ñ—â–µ–Ω–Ω—è, —à–∫–∞–ª –∞–±–æ –±—É–¥—å-—è–∫–∏—Ö —ñ–Ω—à–∏—Ö
                  –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, —è–∫—ñ –Ω–µ –º–∞—é—Ç—å –±—É—Ç–∏ –Ω–∞–¥—Ä—É–∫–æ–≤–∞–Ω—ñ.
                </p>
              </>
            )}
            {showFormat && (
              <>
                <h5>–§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª—ñ–≤</h5>
                <p>
                  2
                </p>
              </>
            )}
            {showColor && (
              <>
                <h5>–ö–æ–ª—ñ—Ä</h5>
                <p>
                  3
                </p>
              </>
            )}
            {showFont && (
              <>
                <h5>–®—Ä–∏—Ñ—Ç</h5>
                <p>
                  4
                </p>
              </>
            )}
            {showWide && (
              <>
                <h5>–®–∏—Ä–æ–∫–æ—Ñ–æ—Ä–º–∞—Ç–Ω–∏–π –¥—Ä—É–∫</h5>
                <p>
                  5
                </p>
              </>
            )}
          </div>
        </div>
      </div>
    </>
  );
};
export default Claim;
